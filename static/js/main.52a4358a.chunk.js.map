{"version":3,"sources":["Components/Navbar.js","Components/TextArea.js","Components/Alert.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","dist","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","onClick","toggleMode1","style","backgroundColor","height","width","cursor","toggleMode2","toggleMode3","TextArea","_useState","useState","_useState2","Object","slicedToArray","text","setText","heading","backMode","value","rows","onChange","event","target","disabled","length","btnCol","upper","toUpperCase","showAlert","lower","toLowerCase","navigator","clipboard","writeText","tex","split","join","filter","element","Alert","alert","role","words","charAt","slice","capitalise","mesg","About","myStyle","color","textMode","aria-labelledby","data-bs-parent","defaultProps","App","setMode","_useState3","_useState4","setBtnCol","_useState5","_useState6","setAlert","_useState7","_useState8","settextMode","_useState9","_useState10","setbackMode","message","setTimeout","basename","document","body","react_router_dist","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"iPAGe,SAASA,EAAOC,GAC7B,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OACEE,UAAS,kCAAAC,OAAoCN,EAAMO,KAAI,QAAAD,OAAON,EAAMO,OAEpEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAACK,EAAA,EAAI,CAACH,UAAU,eAAeI,GAAG,KAC/BT,EAAMU,OAETT,EAAAC,EAAAC,cAAA,UACEE,UAAU,iBACVM,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEXf,EAAAC,EAAAC,cAAA,QAAME,UAAU,yBAElBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BAA2BY,GAAG,0BAC3ChB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mCACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAACK,EAAA,EAAI,CAACH,UAAU,WAAWa,eAAa,OAAOT,GAAG,IAAE,SAItDR,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAACK,EAAA,EAAI,CAACH,UAAU,WAAWI,GAAG,UAC3BT,EAAMmB,SAIblB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,QAAME,UAAS,aAAAC,OAA8B,SAAfN,EAAMO,KAAiB,QAAS,SAAS,aACvEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAee,QAASpB,EAAMqB,YAAaC,MAAO,CAAEC,gBAAiB,qBAAsBC,OAAQ,OAAQC,MAAO,OAAQC,OAAQ,aAEjJzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAee,QAASpB,EAAM2B,YAAaL,MAAO,CAAEC,gBAAiB,qBAAsBC,OAAQ,OAAQC,MAAO,OAAQC,OAAQ,aAEjJzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAee,QAASpB,EAAM4B,YAAaN,MAAO,CAAEC,gBAAiB,mBAAoBC,OAAQ,OAAQC,MAAO,OAAQC,OAAQ,kBCzC9I,SAASG,EAAS7B,GAC7B,IA0BC8B,EACuBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA7BK,EAAIH,EAAA,GAAEI,EAAOJ,EAAA,GACpB,OACI/B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,UAAKH,EAAMqC,SACXpC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACfJ,EAAAC,EAAAC,cAAA,YAAUmB,MAAO,CAACC,gBAAkBvB,EAAMsC,UAAWC,MAAOJ,EAAM9B,UAAU,eAAeY,GAAG,QAAQuB,KAAK,IAAIC,SATpG,SAACC,GACpBN,EAAQM,EAAMC,OAAOJ,WAUbtC,EAAAC,EAAAC,cAAA,UAAQyC,SAAwB,IAAdT,EAAKU,OAAYxC,UAAS,WAAAC,OAAaN,EAAM8C,QAAU1B,QAnC/D,WAClB,IAAI2B,EAAQZ,EAAKa,cACjBZ,EAAQW,GACR/C,EAAMiD,UAAU,0BAA2B,aAgC6D,wBAChGhD,EAAAC,EAAAC,cAAA,UAAQyC,SAAwB,IAAdT,EAAKU,OAAYxC,UAAS,WAAAC,OAAaN,EAAM8C,OAAM,SAAS1B,QA/BpE,WAClB,IAAI8B,EAAQf,EAAKgB,cACjBf,EAAQc,GACRlD,EAAMiD,UAAU,0BAA2B,aA4BkE,wBACrGhD,EAAAC,EAAAC,cAAA,UAAQyC,SAAwB,IAAdT,EAAKU,OAAYxC,UAAS,WAAAC,OAAaN,EAAM8C,QAAU1B,QA3B5D,WAErBgB,EADU,IAEVpC,EAAMiD,UAAU,gBAAiB,aAwB0E,cACnGhD,EAAAC,EAAAC,cAAA,UAAQyC,SAAwB,IAAdT,EAAKU,OAAYxC,UAAS,WAAAC,OAAaN,EAAM8C,OAAM,SAAS1B,QAvBvE,WACfgC,UAAUC,UAAUC,UAAUnB,GAC9BnC,EAAMiD,UAAU,yBAA0B,aAqBgE,aAClGhD,EAAAC,EAAAC,cAAA,UAAQyC,SAAwB,IAAdT,EAAKU,OAAYxC,UAAS,WAAAC,OAAaN,EAAM8C,QAAU1B,QApBhE,WACjB,IAAImC,EAAMpB,EAAKqB,MAAM,SACrBpB,EAAQmB,EAAIE,KAAK,MACjBzD,EAAMiD,UAAU,wBAAyB,aAiB8D,kBAEnGhD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAIgC,EAAKqB,MAAM,OAAOE,OAAO,SAACC,GAAa,OAA0B,IAAnBA,EAAQd,SAAeA,OAAM,cAAaV,EAAKU,OAAM,eACvG5C,EAAAC,EAAAC,cAAA,SAAI,KAAQgC,EAAKqB,MAAM,OAAOE,OAAO,SAACC,GAAa,OAA0B,IAAnBA,EAAQd,SAAeA,OAAM,oBACvF5C,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAM,WACpBJ,EAAAC,EAAAC,cAAA,SAAkB,IAAdgC,EAAKU,OAAW,qBAAqBV,KC/C1C,SAASyB,EAAM5D,GAK1B,OACIC,EAAAC,EAAAC,cAAA,OAAKmB,MAAO,CAACE,OAAS,SACjBxB,EAAM6D,OACH5D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBAAsByD,KAAK,SACtC7D,EAAAC,EAAAC,cAAA,cATD,SAAC4D,GAChB,IAAMb,EAAQa,EAAMZ,cACpB,OAAOD,EAAMc,OAAO,GAAGhB,cAAgBE,EAAMe,MAAM,GAO1BC,CAAWlE,EAAM6D,MAAMlD,OAAe,MAAIX,EAAM6D,MAAMM,QCVxE,SAASC,EAAMpE,GAC1B,IAAIqE,EAAU,CACVC,MAAQtE,EAAMuE,SACdhD,gBAAkBvB,EAAMsC,UAE5B,OACIrC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAM,YACpBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYY,GAAG,mBAAmBK,MAAO+C,GACpDpE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiBiB,MAAO+C,GACnCpE,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAAmBY,GAAG,cAChChB,EAAAC,EAAAC,cAAA,UACIE,UAAU,mBACVM,KAAK,SACLC,iBAAe,WACfC,iBAAe,eACfE,gBAAc,OACdD,gBAAc,cACdQ,MAAO+C,GAEPpE,EAAAC,EAAAC,cAAA,qCAGRF,EAAAC,EAAAC,cAAA,OACIc,GAAG,cACHZ,UAAU,mCACVmE,kBAAgB,aAChBC,iBAAe,qBAEfxE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAgB,uGAKvCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiBiB,MAAO+C,GACnCpE,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAAmBY,GAAG,cAChChB,EAAAC,EAAAC,cAAA,UACIE,UAAU,6BACVM,KAAK,SACLC,iBAAe,WACfC,iBAAe,eACfE,gBAAc,QACdD,gBAAc,cACdQ,MAAO+C,GAEPpE,EAAAC,EAAAC,cAAA,+BAGRF,EAAAC,EAAAC,cAAA,OACIc,GAAG,cACHZ,UAAU,8BACVmE,kBAAgB,aAChBC,iBAAe,qBAEfxE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAgB,mPAKvCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiBiB,MAAO+C,GACnCpE,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAAmBY,GAAG,gBAChChB,EAAAC,EAAAC,cAAA,UACIE,UAAU,6BACVM,KAAK,SACLC,iBAAe,WACfC,iBAAe,iBACfE,gBAAc,QACdD,gBAAc,gBACdQ,MAAO+C,GAEPpE,EAAAC,EAAAC,cAAA,sCAGRF,EAAAC,EAAAC,cAAA,OACIc,GAAG,gBACHZ,UAAU,8BACVmE,kBAAgB,eAChBC,iBAAe,qBAEfxE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAgB,wNHtBvDN,EAAO2E,aAAe,CACpBhE,MAAO,iBACPS,MAAO,yBIOMwD,MAxDf,WAAe,IAAA7C,EACWC,mBAAS,SAAQC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAlCvB,EAAIyB,EAAA,GAAE4C,EAAO5C,EAAA,GAAA6C,EACQ9C,mBAAS,WAAU+C,EAAA7C,OAAAC,EAAA,EAAAD,CAAA4C,EAAA,GAAxC/B,EAAMgC,EAAA,GAAEC,EAASD,EAAA,GAAAE,EACEjD,mBAAS,MAAKkD,EAAAhD,OAAAC,EAAA,EAAAD,CAAA+C,EAAA,GAAjCnB,EAAKoB,EAAA,GAAEC,EAAQD,EAAA,GAAAE,EACUpD,mBAAS,SAAQqD,EAAAnD,OAAAC,EAAA,EAAAD,CAAAkD,EAAA,GAA1CZ,EAAQa,EAAA,GAAEC,EAAWD,EAAA,GAAAE,EACIvD,mBAAS,SAAQwD,EAAAtD,OAAAC,EAAA,EAAAD,CAAAqD,EAAA,GAA1ChD,EAAQiD,EAAA,GAAEC,EAAWD,EAAA,GACtBtC,EAAY,SAACwC,EAAS9E,GAC1BuE,EAAS,CACPf,KAAMsB,EACN9E,KAAMA,IAER+E,WAAW,WACTR,EAAS,OACR,OA0BL,OACEjF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAACK,EAAA,EAAM,CAACmF,SAAS,cACf1F,EAAAC,EAAAC,cAACJ,EAAM,CAACW,MAAM,YAAYS,MAAM,QAAQZ,KAAMA,EAAMc,YA3BpC,WAClBuD,EAAQ,UACRG,EAAU,UACV9B,EAAU,4BAA6B,WACvCoC,EAAY,WACZG,EAAY,sBACZI,SAASC,KAAKvE,MAAMC,gBAAkB,sBAqB0CI,YAnB9D,WAClBiD,EAAQ,WACRG,EAAU,QACV9B,EAAU,6BAA8B,WACxCoC,EAAY,WACZG,EAAY,sBACZI,SAASC,KAAKvE,MAAMC,gBAAkB,sBAaoEK,YAXxF,WAClBgD,EAAQ,QACRG,EAAU,WACV9B,EAAU,6BAA8B,WACxCoC,EAAY,WACZG,EAAY,oBACZI,SAASC,KAAKvE,MAAMC,gBAAkB,UAOpCtB,EAAAC,EAAAC,cAACyD,EAAK,CAACC,MAAOA,IACd5D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACfJ,EAAAC,EAAAC,cAAC2F,EAAA,EAAM,KACH7F,EAAAC,EAAAC,cAAC2F,EAAA,EAAK,CAACC,KAAK,SAASpC,QAAU1D,EAAAC,EAAAC,cAACiE,EAAK,CAACG,SAAYA,EAAUjC,SAAYA,MACxErC,EAAAC,EAAAC,cAAC2F,EAAA,EAAK,CAACC,KAAK,IAAIpC,QAAS1D,EAAAC,EAAAC,cAAC0B,EAAQ,CAACQ,QAAQ,mBAAmBS,OAAQA,EAAQG,UAAWA,EAAWX,SAAUA,WChDzG0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWlB,SAASmB,eAAe,SACpDC,OACH/G,EAAAC,EAAAC,cAACF,EAAAC,EAAM+G,WAAU,KACfhH,EAAAC,EAAAC,cAAC+G,EAAG,QAGRlB","file":"static/js/main.52a4358a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" aria-current=\"page\" to=\"\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.about}\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <div className=\"d-flex\">\r\n              <span className={`my-1 text-${props.mode === \"dark\"? \"white\": \"dark\"}`}>Themes - </span>\r\n              <div className=\"rounded mx-2\" onClick={props.toggleMode1} style={{ backgroundColor: \"rgb(270, 125, 125)\", height: \"30px\", width: \"30px\", cursor: \"pointer\" }}>\r\n              </div>\r\n              <div className=\"rounded mx-2\" onClick={props.toggleMode2} style={{ backgroundColor: \"rgb(140, 140, 250)\", height: \"30px\", width: \"30px\", cursor: \"pointer\" }}>\r\n              </div>\r\n              <div className=\"rounded mx-2\" onClick={props.toggleMode3} style={{ backgroundColor: \"rgb(175,175,175)\", height: \"30px\", width: \"30px\", cursor: \"pointer\" }}>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\n// It set types of props and when isRequired is used it is mandatory to enter value in props\r\n// Navbar.propTypes = {\r\n//     title : PropTypes.string,\r\n//     about : PropTypes.string\r\n// }\r\n// It sets default values for props\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  about: \"about text\",\r\n};\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextArea(props){\r\n    const handleUpClick = () => {\r\n        let upper = text.toUpperCase();\r\n        setText(upper);\r\n        props.showAlert('Converted to UpperCase!', 'Success');\r\n    }\r\n    const handleLoClick = () => {\r\n        let lower = text.toLowerCase();\r\n        setText(lower);\r\n        props.showAlert('Converted to LowerCase!', 'Success');\r\n    }\r\n    const handleClearClick = () => {\r\n        let tex = \"\";\r\n        setText(tex);\r\n        props.showAlert('Text Cleared!', 'Success');\r\n    }\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert('Coppied to Clipboard !', 'Success');\r\n    }\r\n    const handleSpaces = () => {\r\n        let tex = text.split(/ [ ]+/);\r\n        setText(tex.join(\" \"));\r\n        props.showAlert('Extra spaces removed!', 'Success');\r\n    }\r\n    const handleOnchange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                <textarea style={{backgroundColor : props.backMode}} value={text} className=\"form-control\" id=\"myBox\" rows=\"7\" onChange={handleOnchange}></textarea>\r\n                </div>\r\n                <button disabled={text.length===0} className={`btn btn-${props.btnCol}`} onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button disabled={text.length===0} className={`btn btn-${props.btnCol} mx-3`} onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button disabled={text.length===0} className={`btn btn-${props.btnCol}`} onClick={handleClearClick}>Clear Text</button>\r\n                <button disabled={text.length===0} className={`btn btn-${props.btnCol} mx-3`} onClick={handleCopy}>Copy Text</button>\r\n                <button disabled={text.length===0} className={`btn btn-${props.btnCol}`} onClick={handleSpaces}>Remove Spaces</button>\r\n            </div>\r\n            <div className='container my-3'>\r\n                <h1>Text Summary</h1>\r\n                <p>{text.split(/\\s+/).filter((element) => {return element.length !== 0}).length} Words and {text.length} Characters</p>\r\n                <p>{0.008 * text.split(/\\s+/).filter((element) => {return element.length !== 0}).length} Minutes to read</p>\r\n                <h2 className='my-2'>Summary</h2>\r\n                <p>{text.length===0?\"Nothing to preview\":text}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalise = (words)=>{\r\n        const lower = words.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height : \"20px\"}}>\r\n            {props.alert && (\r\n                <>\r\n                    <div className=\"alert alert-success\" role=\"alert\">\r\n                        <strong>{capitalise(props.alert.type)}</strong> : {props.alert.mesg}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n    let myStyle = {\r\n        color : props.textMode,\r\n        backgroundColor : props.backMode\r\n    }\r\n    return (\r\n        <>\r\n            <h1 className=\"my-3\">About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button\r\n                            className=\"accordion-button\"\r\n                            type=\"button\"\r\n                            data-bs-toggle=\"collapse\"\r\n                            data-bs-target=\"#collapseOne\"\r\n                            aria-expanded=\"true\"\r\n                            aria-controls=\"collapseOne\"\r\n                            style={myStyle}\r\n                        >\r\n                            <strong>Analyze Your text</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div\r\n                        id=\"collapseOne\"\r\n                        className=\"accordion-collapse collapse show\"\r\n                        aria-labelledby=\"headingOne\"\r\n                        data-bs-parent=\"#accordionExample\"\r\n                    >\r\n                        <div className=\"accordion-body\">\r\n                            TextUtils gives you a way to analyze your text and efficiently. Be it word count, character count\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button\r\n                            className=\"accordion-button collapsed\"\r\n                            type=\"button\"\r\n                            data-bs-toggle=\"collapse\"\r\n                            data-bs-target=\"#collapseTwo\"\r\n                            aria-expanded=\"false\"\r\n                            aria-controls=\"collapseTwo\"\r\n                            style={myStyle}\r\n                        >\r\n                            <strong>Free to Use</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div\r\n                        id=\"collapseTwo\"\r\n                        className=\"accordion-collapse collapse\"\r\n                        aria-labelledby=\"headingTwo\"\r\n                        data-bs-parent=\"#accordionExample\"\r\n                    >\r\n                        <div className=\"accordion-body\">\r\n                            TextUtils is a free character counter tool that provides instant charcter count & word count statistics for a given text. TextUtils reports the number of words and charaacters. Thus is suitable for wrting text with word/ character limit.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button\r\n                            className=\"accordion-button collapsed\"\r\n                            type=\"button\"\r\n                            data-bs-toggle=\"collapse\"\r\n                            data-bs-target=\"#collapseThree\"\r\n                            aria-expanded=\"false\"\r\n                            aria-controls=\"collapseThree\"\r\n                            style={myStyle}\r\n                        >\r\n                            <strong>Browser Compatible</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div\r\n                        id=\"collapseThree\"\r\n                        className=\"accordion-collapse collapse\"\r\n                        aria-labelledby=\"headingThree\"\r\n                        data-bs-parent=\"#accordionExample\"\r\n                    >\r\n                        <div className=\"accordion-body\">\r\n                            This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count charcters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextArea from \"./Components/TextArea\";\nimport Alert from \"./Components/Alert\";\nimport About from './Components/About'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [btnCol, setBtnCol] = useState(\"primary\");\n  const [alert, setAlert] = useState(null);\n  const [textMode, settextMode] = useState(\"black\");\n  const [backMode, setbackMode] = useState(\"white\");\n  const showAlert = (message, type) => {\n    setAlert({\n      mesg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode1 = () => {\n    setMode(\"danger\");\n    setBtnCol(\"danger\");\n    showAlert(\"Red Mode has been enabled\", \"success\");\n    settextMode(\"#252525\");\n    setbackMode(\"rgb(270, 125, 125)\");\n    document.body.style.backgroundColor = \"rgb(248, 101, 101)\";\n  };\n  const toggleMode2 = () => {\n    setMode(\"primary\");\n    setBtnCol(\"info\");\n    showAlert(\"Blue Mode has been enabled\", \"success\");\n    settextMode(\"#252525\");\n    setbackMode(\"rgb(140, 140, 250)\");\n    document.body.style.backgroundColor = \"rgb(115, 115, 224)\";\n  };\n  const toggleMode3 = () => {\n    setMode(\"dark\");\n    setBtnCol(\"success\");\n    showAlert(\"Dark Mode has been enabled\", \"success\");\n    settextMode(\"#252525\");\n    setbackMode(\"rgb(175,175,175)\");\n    document.body.style.backgroundColor = \"grey\";\n  };\n  return (\n    <>\n    <Router basename=\"/TextUtils\" >\n      <Navbar title=\"TextUtils\" about=\"About\" mode={mode} toggleMode1={toggleMode1} toggleMode2={toggleMode2} toggleMode3={toggleMode3}\n      />\n      <Alert alert={alert} />\n      <div className=\"container mt-5\">\n      <Routes>\n          <Route path=\"/about\" element={ <About textMode = {textMode} backMode = {backMode}/>}></Route>\n          <Route path=\"/\" element={<TextArea heading=\"Enter text below\" btnCol={btnCol} showAlert={showAlert} backMode={backMode}/>}></Route>\n        </Routes>\n      </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\nreportWebVitals();\n"],"sourceRoot":""}