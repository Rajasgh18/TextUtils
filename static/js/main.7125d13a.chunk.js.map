{"version":3,"sources":["Components/Navbar.js","Components/TextArea.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode1","style","backgroundColor","height","width","cursor","toggleMode2","toggleMode3","TextArea","_useState","useState","_useState2","Object","slicedToArray","text","setText","heading","backMode","value","rows","onChange","event","target","disabled","length","btnCol","upper","toUpperCase","showAlert","lower","toLowerCase","navigator","clipboard","writeText","tex","split","join","filter","element","Alert","alert","role","words","charAt","slice","capitalise","mesg","defaultProps","about","App","setMode","_useState3","_useState4","setBtnCol","_useState5","_useState6","setAlert","_useState7","_useState8","settextMode","_useState9","_useState10","setbackMode","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7125d13a.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.about}\r\n                </Link>\r\n              </li> */}\r\n            </ul>\r\n            <div className=\"d-flex\">\r\n              <span className={`my-1 text-${props.mode === \"dark\"? \"white\": \"dark\"}`}>Themes - </span>\r\n              <div className=\"rounded mx-2\" onClick={props.toggleMode1} style={{ backgroundColor: \"rgb(270, 125, 125)\", height: \"30px\", width: \"30px\", cursor: \"pointer\" }}>\r\n              </div>\r\n              <div className=\"rounded mx-2\" onClick={props.toggleMode2} style={{ backgroundColor: \"rgb(140, 140, 250)\", height: \"30px\", width: \"30px\", cursor: \"pointer\" }}>\r\n              </div>\r\n              <div className=\"rounded mx-2\" onClick={props.toggleMode3} style={{ backgroundColor: \"rgb(175,175,175)\", height: \"30px\", width: \"30px\", cursor: \"pointer\" }}>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\n// It set types of props and when isRequired is used it is mandatory to enter value in props\r\n// Navbar.propTypes = {\r\n//     title : PropTypes.string,\r\n//     about : PropTypes.string\r\n// }\r\n// It sets default values for props\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  about: \"about text\",\r\n};\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextArea(props){\r\n    const handleUpClick = () => {\r\n        let upper = text.toUpperCase();\r\n        setText(upper);\r\n        props.showAlert('Converted to UpperCase!', 'Success');\r\n    }\r\n    const handleLoClick = () => {\r\n        let lower = text.toLowerCase();\r\n        setText(lower);\r\n        props.showAlert('Converted to LowerCase!', 'Success');\r\n    }\r\n    const handleClearClick = () => {\r\n        let tex = \"\";\r\n        setText(tex);\r\n        props.showAlert('Text Cleared!', 'Success');\r\n    }\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert('Coppied to Clipboard !', 'Success');\r\n    }\r\n    const handleSpaces = () => {\r\n        let tex = text.split(/ [ ]+/);\r\n        setText(tex.join(\" \"));\r\n        props.showAlert('Extra spaces removed!', 'Success');\r\n    }\r\n    const handleOnchange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                <textarea style={{backgroundColor : props.backMode}} value={text} className=\"form-control\" id=\"myBox\" rows=\"7\" onChange={handleOnchange}></textarea>\r\n                </div>\r\n                <button disabled={text.length===0} className={`btn btn-${props.btnCol}`} onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button disabled={text.length===0} className={`btn btn-${props.btnCol} mx-3`} onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button disabled={text.length===0} className={`btn btn-${props.btnCol}`} onClick={handleClearClick}>Clear Text</button>\r\n                <button disabled={text.length===0} className={`btn btn-${props.btnCol} mx-3`} onClick={handleCopy}>Copy Text</button>\r\n                <button disabled={text.length===0} className={`btn btn-${props.btnCol}`} onClick={handleSpaces}>Remove Spaces</button>\r\n            </div>\r\n            <div className='container my-3'>\r\n                <h1>Text Summary</h1>\r\n                <p>{text.split(/\\s+/).filter((element) => {return element.length !== 0}).length} Words and {text.length} Characters</p>\r\n                <p>{0.008 * text.split(/\\s+/).filter((element) => {return element.length !== 0}).length} Minutes to read</p>\r\n                <h2 className='my-2'>Summary</h2>\r\n                <p>{text.length===0?\"Nothing to preview\":text}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalise = (words)=>{\r\n        const lower = words.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height : \"20px\"}}>\r\n            {props.alert && (\r\n                <>\r\n                    <div className=\"alert alert-success\" role=\"alert\">\r\n                        <strong>{capitalise(props.alert.type)}</strong> : {props.alert.mesg}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextArea from \"./Components/TextArea\";\nimport Alert from \"./Components/Alert\";\n// import About from './Components/About'\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [btnCol, setBtnCol] = useState(\"primary\");\n  const [alert, setAlert] = useState(null);\n  const [textMode, settextMode] = useState(\"black\");\n  const [backMode, setbackMode] = useState(\"white\");\n  const showAlert = (message, type) => {\n    setAlert({\n      mesg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode1 = () => {\n    setMode(\"danger\");\n    setBtnCol(\"danger\");\n    showAlert(\"Red Mode has been enabled\", \"success\");\n    settextMode(\"#252525\");\n    setbackMode(\"rgb(270, 125, 125)\");\n    document.body.style.backgroundColor = \"rgb(248, 101, 101)\";\n  };\n  const toggleMode2 = () => {\n    setMode(\"primary\");\n    setBtnCol(\"info\");\n    showAlert(\"Blue Mode has been enabled\", \"success\");\n    settextMode(\"#252525\");\n    setbackMode(\"rgb(140, 140, 250)\");\n    document.body.style.backgroundColor = \"rgb(115, 115, 224)\";\n  };\n  const toggleMode3 = () => {\n    setMode(\"dark\");\n    setBtnCol(\"success\");\n    showAlert(\"Dark Mode has been enabled\", \"success\");\n    settextMode(\"#252525\");\n    setbackMode(\"rgb(175,175,175)\");\n    document.body.style.backgroundColor = \"grey\";\n  };\n  return (\n    <>\n    {/* <Router > */}\n      <Navbar title=\"TextUtils\" about=\"About\" mode={mode} toggleMode1={toggleMode1} toggleMode2={toggleMode2} toggleMode3={toggleMode3}\n      />\n      <Alert alert={alert} />\n      <div className=\"container mt-5\">\n      <TextArea heading=\"Enter text below\" btnCol={btnCol} showAlert={showAlert} backMode={backMode}/>\n      {/* <Routes>\n          <Route path=\"/about\" element={ <About textMode = {textMode} backMode = {backMode}/>}></Route>\n          <Route path=\"/\" element={}></Route>\n        </Routes> */}\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\nreportWebVitals();\n"],"sourceRoot":""}